@model Book_store.Domain.Models.Publisher
@using Book_store.Domain.Models

<h1>Edit</h1>

<h4>Publisher</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PublisherImage" class="control-label"></label>
                <input asp-for="PublisherImage" class="form-control" />
                <span asp-validation-for="PublisherImage" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Books" class="control-label"></label>
                <select name="SelectedBookIds" class="form-control" multiple="multiple">
                    @foreach (var book in ViewBag.Books as IEnumerable<Book>)
                    {
                        <option value="@book.Id">@book.Title</option>
                    }
                </select>
                <span asp-validation-for="Books" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Edit" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
